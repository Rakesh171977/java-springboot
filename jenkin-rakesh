pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "rakesh171977/springboot-app"
    }

    stages {
        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Push Docker Image') {
            steps {
                // Using your Docker Hub credentials
                withCredentials([usernamePassword(credentialsId: 'docker-token', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                      docker push $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                // Using your AWS credentials
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-cred']]) {
                    sh '''
                      # Configure AWS CLI
                      aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                      aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                      aws configure set region eu-west-2

                      # Update kubeconfig for your cluster
                      aws eks update-kubeconfig --name devops-nation-cluster --region eu-west-2

                      # Create namespace if not exists
                      kubectl create namespace rakesh-namespace --dry-run=client -o yaml | kubectl apply -f -

                      # Deploy Spring Boot app
                      kubectl apply -f k8/deployment.yaml -n rakesh-namespace
                      kubectl apply -f k8/service.yaml -n rakesh-namespace
                    '''
                }
            }
        }

        stage('Show Access URL') {
            steps {
                sh '''
                  NODE_PORT=$(kubectl get svc springboot-hello-service -n rakesh-namespace -o jsonpath='{.spec.ports[0].nodePort}')
                  NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="ExternalIP")].address}')
                  echo "=========================================="
                  echo "Access your app at: http://$NODE_IP:$NODE_PORT"
                  echo "=========================================="
                '''
            }
        }
    }
}

