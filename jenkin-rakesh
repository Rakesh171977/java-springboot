pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "rakesh171977/springboot-app"
        KUBE_NAMESPACE = "springdemo"
    }

    stages {
        stage('Build with Maven') {
            steps {
                echo "üî® Building Spring Boot app..."
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "üê≥ Building Docker image..."
                sh 'docker build -t $DOCKER_IMAGE:$BUILD_NUMBER .'
                sh 'docker tag $DOCKER_IMAGE:$BUILD_NUMBER $DOCKER_IMAGE:latest'
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "üì§ Pushing Docker image to DockerHub..."
                withCredentials([usernamePassword(credentialsId: 'docker-token', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                      docker push $DOCKER_IMAGE:$BUILD_NUMBER
                      docker push $DOCKER_IMAGE:latest
                    '''
                }
            }
        }

        stage('Deploy with Helm to Minikube') {
            steps {
                echo "üöÄ Deploying to Minikube with Helm..."
                sh """
                helm upgrade --install springboot-app ./springboot-chart \
                  --namespace $KUBE_NAMESPACE --create-namespace \
                  --set image.repository=$DOCKER_IMAGE \
                  --set image.tag=$BUILD_NUMBER
                """
            }
        }

        stage('Show Access URL') {
            steps {
                echo "üåê Fetching NodePort access URL..."
                sh '''
                  NODE_PORT=$(kubectl get svc springboot-app-springboot-chart -n $KUBE_NAMESPACE -o jsonpath='{.spec.ports[0].nodePort}')
                  NODE_IP=$(minikube ip)
                  echo "=========================================="
                  echo "Access your app at: http://$NODE_IP:$NODE_PORT"
                  echo "=========================================="
                '''
            }
        }
    }

    post {
        success {
            echo "‚úÖ Deployment successful!"
        }
        failure {
            echo "‚ùå Deployment failed. Please check logs."
        }
    }
}


